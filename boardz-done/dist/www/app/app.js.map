{"version":3,"sources":["app.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAgCA;gBACI,mBAAoB,eAA+B,EAC/B,aAA2B,EAC3B,oBAAyC,EACzC,yBAAmD,EACnD,sBAA6C,EAC7C,WAAuB;oBALvB,oBAAe,GAAf,eAAe,CAAgB;oBAC/B,kBAAa,GAAb,aAAa,CAAc;oBAC3B,yBAAoB,GAApB,oBAAoB,CAAqB;oBACzC,8BAAyB,GAAzB,yBAAyB,CAA0B;oBACnD,2BAAsB,GAAtB,sBAAsB,CAAuB;oBAC7C,gBAAW,GAAX,WAAW,CAAY;oBACvC,WAAW,CAAC,eAAe,GAAG,mBAAQ,CAAC,OAAO,CAAC;oBAC/C,sBAAsB,CAAC,wBAAwB,EAAE,CAAC;oBAClD,yBAAyB,CAAC,IAAI,EAAE,CAAC;gBACrC,CAAC;gBAED,mCAAe,GAAf;oBAAA,iBAYC;oBAXG,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtB,MAAM,CAAC,YAAY,EAAE,CAAC;oBAC1B,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;wBACrC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;oBACjC,CAAC;oBAED,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAA,OAAO;wBACrD,KAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;oBACzD,CAAC,CAAC,CAAC;gBACP,CAAC;gBArCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,SAAS,EAAE,kBAAY;wBACvB,UAAU,EAAE,CAAC,0BAAiB,EAAE,iBAAO,EAAE,wBAAe,CAAC;wBACzD,WAAW,EAAE,cAAc;qBAC9B,CAAC;oBACD,oBAAW,CAAC;wBACT,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,qBAAS,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,IAAI,EAAE;wBAC1E,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,iBAAS,EAAE,IAAI,EAAE,OAAO,EAAE;wBACvD,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,6BAAa,EAAE,IAAI,EAAE,eAAe,EAAE;wBAC3E,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,aAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,EAAE;wBACvF,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,oCAAqB,EAAE,IAAI,EAAE,cAAc,EAAE;qBACpF,CAAC;;6BAAA;gBA0BF,gBAAC;YAAD,CAzBA,AAyBC,IAAA;YAzBD,iCAyBC,CAAA","file":"app.js","sourcesContent":["import {Component, AfterViewInit} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, RouteConfig} from 'angular2/router';\nimport {LoginForm} from './components/login/login';\nimport {Dashboard} from './components/dashboard/dashboard';\nimport {Sidebar} from './components/sidebar/sidebar';\nimport {HeaderComponent} from './components/header/header';\nimport {Games} from './components/games/games';\nimport {Notifications} from './components/notifications/notifications';\nimport {APP_SERVICES} from './services/all';\nimport {RadiusSearchComponent} from './components/radiussearch/radiussearch';\nimport {LogService} from './services/log.service';\nimport {LogLevel} from './models/loglevel';\nimport {SignalRService} from './services/signalr.service';\nimport {LoginService} from './services/login.service';\nimport {NotificationService} from './services/notification.service';\nimport {UiNotificationService} from './services/ui.notification.service';\nimport {PlatformInformationService} from \"./services/platform.information.service\";\nimport {NativeIntegrationService} from \"./services/nativeIntegrationService\";\n\n@Component({\n    selector: 'boardz-app',\n    providers: APP_SERVICES,\n    directives: [ROUTER_DIRECTIVES, Sidebar, HeaderComponent],\n    templateUrl: 'app/app.html'\n})\n@RouteConfig([\n    { path: '/', component: Dashboard, name: 'Dashboard', useAsDefault: true },\n    { path: '/login', component: LoginForm, name: 'Login' },\n    { path: '/notifications', component: Notifications, name: 'Notifications' },\n    { path: '/games/...', component: Games, name: 'Games', data: { displayName: 'Games' } },\n    { path: '/radiussearch', component: RadiusSearchComponent, name: 'RadiusSearch' }\n])\nexport class BoardzApp implements AfterViewInit {\n    constructor(private _signalRService: SignalRService,\n                private _loginService: LoginService,\n                private _notificationService: NotificationService,\n                private _nativeIntegrationService: NativeIntegrationService,\n                private _uiNotificationService: UiNotificationService,\n                private _logService: LogService) {\n        _logService.maximumLogLevel = LogLevel.Verbose;\n        _uiNotificationService.subscribeToNotifications();\n        _nativeIntegrationService.init();\n    }\n\n    ngAfterViewInit(): any {\n        if (window.initAdminLTE) {\n            window.initAdminLTE();\n        }\n\n        if (this._loginService.isAuthenticated) {\n            this._signalRService.start();\n        }\n\n        this._signalRService.someoneJoinedAGame.subscribe(message => {\n            this._notificationService.notifyInformation(message);\n        });\n    }\n}\n\ninterface BoardZAppWindow extends Window {\n    initAdminLTE(): void;\n}\n\ndeclare var window: BoardZAppWindow;\n"],"sourceRoot":"/source/"}