{"version":3,"sources":["services/signalr.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YASA;gBAOI,wBAAoB,cAA6B,EAC7B,aAA2B,EAC3B,WAAuB;oBAFvB,mBAAc,GAAd,cAAc,CAAe;oBAC7B,kBAAa,GAAb,aAAa,CAAc;oBAC3B,gBAAW,GAAX,WAAW,CAAY;oBAJpC,uBAAkB,GAAyB,IAAI,mBAAY,EAAU,CAAC;oBAKzE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,aAAa,CAAC;gBAC1C,CAAC;gBAEM,sCAAa,GAApB,UAAqB,IAAY;oBAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACpB,MAAM,CAAC;oBACX,CAAC;oBAED,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBACjD,CAAC;gBAEM,8BAAK,GAAZ;oBAAA,iBAkBC;oBAjBG,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;wBAChD,MAAM,CAAC;oBACX,CAAC;oBAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAI,IAAI,CAAC,cAAc,CAAC,WAAW,YAAS,CAAC,CAAC;oBACpF,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,EAAE,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;oBACpE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;oBAEjE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,uBAAuB,EAAE,UAAC,QAAQ,EAAE,IAAI;wBACzD,IAAI,GAAG,GAAM,QAAQ,yBAAoB,IAAI,MAAG,CAAC;wBACjD,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,+BAA6B,GAAK,CAAC,CAAC;wBAC9D,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACtC,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;yBACnB,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,iCAAiC,CAAC,EAA5D,CAA4D,CAAC;yBACxE,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,qCAAqC,CAAC,EAAhE,CAAgE,CAAC,CAAC;gBACtF,CAAC;gBAEM,6BAAI,GAAX;oBACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;oBAC5B,CAAC;oBAED,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;oBAC7B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;gBAClC,CAAC;gBAjDL;oBAAC,iBAAU,EAAE;;kCAAA;gBAkDb,qBAAC;YAAD,CAjDA,AAiDC,IAAA;YAjDD,2CAiDC,CAAA","file":"services/signalr.service.js","sourcesContent":["import {Injectable, EventEmitter} from 'angular2/core';\nimport {Configuration} from '../app-config';\nimport {LogService} from './log.service';\nimport {TokenService} from './token.service';\n\n// jQuery Ahoi\ndeclare var $;\n\n@Injectable()\nexport class SignalRService {\n    private _hubConnection;\n    private _connection;\n    private _playerProxy;\n\n    public someoneJoinedAGame: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor(private _configuration: Configuration,\n                private _tokenService: TokenService,\n                private _logService: LogService) {\n        this._hubConnection = $.hubConnection;\n    }\n\n    public sendIAmGaming(game: string): void {\n        if (!this._connection) {\n            return;\n        }\n\n        this._playerProxy.invoke('iAmPlaying', game);\n    }\n\n    public start(): void {\n        if (this._connection || !this._tokenService.token) {\n            return;\n        }\n\n        this._connection = this._hubConnection(`${this._configuration.apiEndpoint}signalr`);\n        this._connection.qs = { 'authorization': this._tokenService.token };\n        this._playerProxy = this._connection.createHubProxy('playerHub');\n\n        this._playerProxy.on('someoneStartedPlaying', (username, game) => {\n            var msg = `${username} started playing ${game}.`;\n            this._logService.logDebug(`Received SignalR message: ${msg}`);\n            this.someoneJoinedAGame.emit(msg);\n        });\n\n        this._connection.start()\n            .done(() => this._logService.logDebug('SignalR connection established.'))\n            .fail(() => this._logService.logError('SignalR connection not established.'));\n    }\n\n    public stop(): void {\n        if (this._connection) {\n            this._connection.stop();\n        }\n\n        this._connection = undefined;\n        this._playerProxy = undefined;\n    }\n}\n"],"sourceRoot":"/source/"}