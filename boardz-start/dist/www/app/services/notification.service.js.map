{"version":3,"sources":["services/notification.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAOA;gBAGI,6BAAoB,WAAuB;oBAAvB,gBAAW,GAAX,WAAW,CAAY;oBAFpC,kBAAa,GAA0B,IAAI,iBAAO,EAAgB,CAAC;gBAG1E,CAAC;gBAEM,oCAAM,GAAb,UAAc,YAA0B;oBACpC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;wBACxB,MAAM,CAAC;oBACX,CAAC;oBAED,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,oDAAoD,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;oBAC/G,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC1C,CAAC;gBAEM,+CAAiB,GAAxB,UAAyB,OAAe;oBACpC,IAAI,CAAC,MAAM,CACP,IAAI,2BAAY,CAAC,OAAO,EAAE,mCAAgB,CAAC,WAAW,CAAC,CAC1D,CAAC;gBACN,CAAC;gBAEM,2CAAa,GAApB,UAAqB,OAAe;oBAChC,IAAI,CAAC,MAAM,CACP,IAAI,2BAAY,CAAC,OAAO,EAAE,mCAAgB,CAAC,OAAO,CAAC,CACtD,CAAC;gBACN,CAAC;gBAEM,2CAAa,GAApB,UAAqB,OAAe;oBAChC,IAAI,CAAC,MAAM,CACP,IAAI,2BAAY,CAAC,OAAO,EAAE,mCAAgB,CAAC,OAAO,CAAC,CACtD,CAAC;gBACN,CAAC;gBAEM,yCAAW,GAAlB,UAAmB,OAAe;oBAC9B,IAAI,CAAC,MAAM,CACP,IAAI,2BAAY,CAAC,OAAO,EAAE,mCAAgB,CAAC,KAAK,CAAC,CACpD,CAAC;gBACN,CAAC;gBAtCL;oBAAC,iBAAU,EAAE;;uCAAA;gBAuCb,0BAAC;YAAD,CAtCA,AAsCC,IAAA;YAtCD,qDAsCC,CAAA","file":"services/notification.service.js","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Subject} from 'rxjs/Subject';\nimport {LogService} from './log.service';\nimport {Notification} from '../models/notification';\nimport {NotificationType} from '../models/notificationtype';\n\n@Injectable()\nexport class NotificationService {\n    public notifications: Subject<Notification> = new Subject<Notification>();\n\n    constructor(private _logService: LogService) {\n    }\n\n    public notify(notification: Notification) {\n        if (!notification.message) {\n            return;\n        }\n\n        this._logService.logDebug('NotificationService.notify received notification: ' + JSON.stringify(notification));\n        this.notifications.next(notification);\n    }\n\n    public notifyInformation(message: string) {\n        this.notify(\n            new Notification(message, NotificationType.Information)\n        );\n    }\n\n    public notifySuccess(message: string) {\n        this.notify(\n            new Notification(message, NotificationType.Success)\n        );\n    }\n\n    public notifyWarning(message: string) {\n        this.notify(\n            new Notification(message, NotificationType.Warning)\n        );\n    }\n\n    public notifyError(message: string) {\n        this.notify(\n            new Notification(message, NotificationType.Error)\n        );\n    }\n}\n"],"sourceRoot":"/source/"}