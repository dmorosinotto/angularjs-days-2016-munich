{"version":3,"sources":["components/header/header.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaA;gBAMI,yBAAmB,YAA0B,EAAU,aAA2B,EAAU,oBAAyC,EAAU,WAAuB;oBAAnJ,iBAAY,GAAZ,YAAY,CAAc;oBAAU,kBAAa,GAAb,aAAa,CAAc;oBAAU,yBAAoB,GAApB,oBAAoB,CAAqB;oBAAU,gBAAW,GAAX,WAAW,CAAY;oBAL9J,kBAAa,GAAmB,EAAE,CAAC;oBAEpC,aAAQ,GAAY,KAAK,CAAC;oBAC1B,oBAAe,GAAW,SAAS,CAAC;gBAI3C,CAAC;gBAED,kCAAQ,GAAR;oBAAA,iBAQC;oBAPG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,SAAS,CAC7C,UAAC,YAAY,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAjC,CAAiC,CACtD,CAAC;oBACF,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,UAAA,MAAM;wBACvC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,2EAA2E,GAAG,MAAM,CAAC,CAAC;wBAChH,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAA;oBAC1B,CAAC,CAAC,CAAC;gBACP,CAAC;gBAEM,iCAAO,GAAd,UAAe,YAA0B;oBACrC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACf,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;wBAErD,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACb,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;wBACxC,CAAC;oBACL,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;oBAC5B,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAEO,wCAAc,GAAtB,UAAuB,YAA0B;oBAC7C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;gBAC7C,CAAC;gBAED,gCAAM,GAAN,UAAO,KAAK;oBACR,KAAK,CAAC,cAAc,EAAE,CAAC;oBAEvB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;gBAC/B,CAAC;gBAhDL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,eAAe;wBACzB,UAAU,EAAE,CAAC,gBAAO,CAAC;wBACrB,WAAW,EAAE,mCAAmC;qBACnD,CAAC;;mCAAA;gBA6CF,sBAAC;YAAD,CA5CA,AA4CC,IAAA;YA5CD,6CA4CC,CAAA","file":"components/header/header.js","sourcesContent":["import {Component, OnInit} from 'angular2/core';\nimport {NgClass} from 'angular2/common';\nimport {Notification} from '../../models/notification';\nimport {LoginService} from '../../services/login.service';\nimport {TokenService} from '../../services/token.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {LogService} from '../../services/log.service';\n\n@Component({\n    selector: 'boardz-header',\n    directives: [NgClass],\n    templateUrl: 'app/components/header/header.html'\n})\nexport class HeaderComponent implements OnInit {\n    private notifications: Notification[] = [];\n\n    public loggedIn: boolean = false;\n    public currentLocation: string = 'BoardZ!';\n\n    constructor(public loginService: LoginService, private _tokenService: TokenService, private _notificationService: NotificationService, private _logService: LogService) {\n\n    }\n\n    ngOnInit(): any {\n        this._notificationService.notifications.subscribe(\n            (notification) => this.onNotification(notification)\n        );\n        this._tokenService.check().subscribe(result => {\n            this._logService.logDebug('Headerbar: Received notification about tokenstore status change. Result: ' + result);\n            this.loggedIn = result\n        });\n    }\n\n    public dismiss(notification: Notification): boolean {\n        if (notification) {\n            let index = this.notifications.indexOf(notification);\n\n            if (index > -1) {\n                this.notifications.splice(index, 1);\n            }\n        }\n        else {\n            this.notifications = [];\n        }\n\n        return false;\n    }\n\n    private onNotification(notification: Notification): void {\n        this.notifications.unshift(notification);\n    }\n\n    logout(event): void {\n        event.preventDefault();\n\n        this.loginService.logout();\n    }\n}\n"],"sourceRoot":"/source/"}