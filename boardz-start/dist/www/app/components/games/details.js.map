{"version":3,"sources":["components/games/details.ts"],"names":[],"mappings":"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","file":"components/games/details.js","sourcesContent":["import {Component, OnInit, Injector} from 'angular2/core';\nimport {RouteParams, Router} from 'angular2/router';\nimport {NeedsAuthentication} from '../../decorators/needsAuthentication';\nimport {DiagnosticComponent} from '../diagnostic/diagnostic';\nimport {LocateItComponent} from '../locateit/locateit';\nimport {PictureItComponent} from '../pictureit/pictureit';\nimport {Game} from '../../models/game';\nimport {LogService} from '../../services/log.service';\nimport {GamesService} from '../../services/games.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {SignalRService} from '../../services/signalr.service';\nimport {PlayersService} from '../../services/players.service';\nimport {Player} from '../../models/player';\nimport {GeoLocation} from '../../models/geolocation';\nimport {LoginService} from '../../services/login.service';\nimport {Notification} from '../../models/notification';\nimport {NotificationType} from '../../models/notificationtype';\n\n@Component({\n    selector: 'gameDetail',\n    directives: [DiagnosticComponent, LocateItComponent, PictureItComponent],\n    templateUrl: 'app/components/games/details.html',\n    inputs: ['game']\n})\n@NeedsAuthentication()\nexport class GameDetails implements OnInit {\n    private _needsReset: boolean;\n    private _pictureUrl: string = \"\";\n    private _coordinates: GeoLocation = null;\n    private _sending: boolean;\n\n    public active = true;\n    public model: Game = new Game();\n    public originalModel: Game = new Game();\n\n    constructor(private _logService: LogService,\n                private _gameService: GamesService,\n                private _router: Router,\n                private _routeParams: RouteParams,\n                private _notificationService: NotificationService,\n                private _playersService: PlayersService,\n                private _signalRService: SignalRService,\n                private _loginService: LoginService,\n                private _injector: Injector) {\n    }\n\n    ngOnInit(): void {\n        let id = this._routeParams.get('id');\n\n        if (!id) {\n            this.originalModel = this._gameService.deepClone(this.model = new Game());\n            return;\n        }\n        this.loadGame(id);\n    }\n\n    private loadGame(id: string): void {\n        this._gameService.getById(id)\n            .subscribe(\n                (game) => {\n                    this.originalModel = this._gameService.deepClone(this.model = game);\n                    if (this._needsReset) this.reset();\n                },\n                (error) => {\n                    this._logService.logError('Could not find game. Error was: ' + error);\n                    this._notificationService.notifyError('Could not load game data.');\n                }\n            );\n    }\n\n    public abort(): void {\n        this._router.navigate(['GameList']);\n    }\n\n    public reset(): void {\n        this._needsReset = false;\n\n        // Based on: https://angular.io/docs/ts/latest/guide/forms.html\n        this.model = this._gameService.deepClone(this.originalModel);\n\n        // workaround to re-initialize the actual form controls states\n        this.active = false;\n        setTimeout(() => this.active = true, 0);\n    }\n\n    public saveChanges(): void {\n        if (this.model.id === null) {\n            this._gameService.addGame(this.model)\n                .subscribe(\n                    (newId) => {\n                        this._notificationService.notifySuccess('New game was added.')\n                        this._needsReset = true;\n                        this.loadGame(newId);\n                    },\n                    ()=> this._notificationService.notifyError('Could not save new game.')\n                );\n        } else {\n            this._gameService.updateGame(this.model)\n                .subscribe((oldId) => {\n                        this._notificationService.notifySuccess('Game data was updated.')\n                        this._needsReset = true;\n                        this.loadGame(oldId);\n                    },\n                    () => {\n                        this._notificationService.notifyError('Could not update game data.')\n                    }\n                );\n        }\n    }\n\n    public deleteGame(): void {\n        if (window.confirm('Really delete the game \"' + this.originalModel.name + '\" ?')) {\n            this._gameService.deleteGame(this.originalModel.id)\n                .subscribe(\n                    () => {\n                        this._notificationService.notifySuccess('Game data was deleted.');\n                        this.abort();\n                    },\n                    () => this._notificationService.notifyError('Could not delete game data.')\n                );\n        }\n    }\n\n    public useLocation(coordinates: GeoLocation) {\n        this._coordinates = coordinates;\n    }\n\n    public usePicture(pictureUrl: string) {\n        this._pictureUrl = pictureUrl;\n    }\n\n    public canPlay() {\n        return this._coordinates && this._pictureUrl;\n    }\n\n    public iAmPlaying(): void {\n        if (!this.canPlay()) {\n            return;\n        }\n\n        this._sending = true;\n        this._signalRService.sendIAmGaming(this.model.name);\n\n        var player = new Player();\n        player.name = this._loginService.username;\n        player.boardGameId = this.model.id;\n        player.coordinate = this._coordinates;\n        player.imageUrl = this._pictureUrl;\n\n        this._playersService.add(player)\n            .subscribe(()=> {\n                    this._notificationService.notify(new Notification(`Thanks for sharing, ${player.name}`, NotificationType.Success));\n\n                },\n                ()=> console.log('error while uploading'),\n                ()=> this._sending = false\n            );\n    }\n}\n"],"sourceRoot":"/source/"}