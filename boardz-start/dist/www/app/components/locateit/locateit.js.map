{"version":3,"sources":["components/locateit/locateit.ts"],"names":[],"mappings":"AAAA,gFAAgF;;;;;;;;;;;;;;;;;;;;;;;;;;;YAYhF;gBASI,2BAAoB,mBAAuC;oBAAvC,wBAAmB,GAAnB,mBAAmB,CAAoB;oBARnD,cAAS,GAAY,KAAK,CAAC;oBAC3B,gBAAW,GAAY,KAAK,CAAC;oBAC7B,YAAO,GAAgB,IAAI,CAAC;oBAE5B,eAAU,GAA8B,IAAI,mBAAY,EAAe,CAAC;oBAK5E,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;gBAC5C,CAAC;gBAED,oCAAQ,GAAR;oBAAA,iBAwBC;oBAvBG,aAAa;oBACb,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;oBAEvD,CAAC,CAAC,SAAS,CAAC,8EAA8E,EAAE;wBACxF,OAAO,EAAE,EAAE;qBACd,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAEnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBAExB,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE;yBAC5B,IAAI,CAAC,UAAC,MAAmB;wBACtB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;wBACtB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAE7B,KAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC/B,CAAC,CAAC;yBACD,KAAK,CAAC;wBACH,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAE7B,CAAC,CAAC,CAAC;gBACX,CAAC;gBAEO,+CAAmB,GAA3B;oBACI,IAAM,WAAW,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;oBACpE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;oBAClC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1C,CAAC;gBAvCD;oBAAC,aAAM,CAAC,WAAW,CAAC;;qEAAA;gBATxB;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,WAAW;wBACrB,KAAK,EAAE,CAAC,iBAAQ,CAAC;wBACjB,WAAW,EAAE,uCAAuC;qBACvD,CAAC;;qCAAA;gBA6CF,wBAAC;YAAD,CA5CA,AA4CC,IAAA;YA5CD,iDA4CC,CAAA","file":"components/locateit/locateit.js","sourcesContent":["///<reference path=\"../../../../../typings/main/ambient/leaflet/leaflet.d.ts\" />\n\nimport {Component, Output, OnInit, EventEmitter} from 'angular2/core';\nimport {JsonPipe} from 'angular2/common';\nimport {GeoLocation} from '../../models/geolocation';\nimport {GeolocationService} from '../../services/geolocation.service';\n\n@Component({\n    selector: 'locate-it',\n    pipes: [JsonPipe],\n    templateUrl: 'app/components/locateit/locateit.html'\n})\nexport class LocateItComponent implements OnInit {\n    private _hasError: boolean = false;\n    private _isLocating: boolean = false;\n    private _coords: GeoLocation = null;\n    @Output('onLocated')\n    private _onLocated: EventEmitter<GeoLocation> = new EventEmitter<GeoLocation>();\n\n    public map;\n\n    constructor(private _geolocationService: GeolocationService) {\n        L.Icon.Default.imagePath = 'app/images';\n    }\n\n    ngOnInit(): any {\n        // Berlin ;-)\n        this.map = L.map('map').setView([52.5167, 13.3833], 7);\n\n        L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', {\n            maxZoom: 13\n        }).addTo(this.map);\n\n        this._isLocating = true;\n        \n        this._geolocationService.locate()\n            .then((coords: GeoLocation)=> {\n                this._hasError = false;\n                this._isLocating = false;\n                this._coords = coords;\n                this._onLocated.emit(coords);\n\n                this.setMapMarkerAndView();\n            })\n            .catch(()=> {\n                this._hasError = true;\n                this._isLocating = false;\n\n            });\n    }\n\n    private setMapMarkerAndView() {\n        const coordinates = [this._coords.latitude, this._coords.longitude];\n        this.map.setView(coordinates, 13);\n        L.marker(coordinates).addTo(this.map);\n    }\n}\n"],"sourceRoot":"/source/"}